# This config was automatically generated from your source code
# Stacks detected: deps:node:frontend,deps:python:backend,package_manager:poetry:backend
version: 2.1

orbs:
  docker: circleci/docker@2
  aws-ecr: circleci/aws-ecr@8
  aws-ecs: circleci/aws-ecs@3

jobs:
  build-and-push-images:
    docker:
      - image: cimg/docker:24.0
    steps:
      - checkout
      - setup_remote_docker
      - aws-ecr/build-and-push-image:
          repo: ${ECR_REPO_FRONTEND}
          path: ./frontend
          tag: ${CIRCLE_TAG}
      - aws-ecr/build-and-push-image:
          repo: ${ECR_REPO_BACKEND}
          path: ./backend
          tag: ${CIRCLE_TAG}

  deploy-to-aws:
    docker:
      - image: cimg/python:3.10
    steps:
      - checkout
      - aws-ecs/update-task-definition:
          family: "${ECS_FRONTEND_SERVICE}"
          container-image-name-updates: "container=${ECS_FRONTEND_CONTAINER},image=${ECR_REPO_FRONTEND}:${CIRCLE_TAG}"
          execution-role-arn: "${ECS_EXECUTION_ROLE_ARN}"
          network-mode: "awsvpc"
          requires-compatibilities: "FARGATE"
          cpu: "256"
          memory: "512"
          task-definition-path: frontend/task-definition.json
      
      - aws-ecs/update-task-definition:
          family: "${ECS_BACKEND_SERVICE}"
          container-image-name-updates: "container=${ECS_BACKEND_CONTAINER},image=${ECR_REPO_BACKEND}:${CIRCLE_TAG}"
          execution-role-arn: "${ECS_EXECUTION_ROLE_ARN}"
          network-mode: "awsvpc"
          requires-compatibilities: "FARGATE"
          cpu: "256"
          memory: "512"
          task-definition-path: backend/task-definition.json

      - aws-ecs/deploy-service-update:
          cluster: "${ECS_CLUSTER_NAME}"
          service-name: "${ECS_FRONTEND_SERVICE}"
          family: "${ECS_FRONTEND_SERVICE}"
          force-new-deployment: true
          deployment-controller: "ECS"
          network-configuration: '{"awsvpcConfiguration":{"subnets":["${SUBNET_1}","${SUBNET_2}"],"securityGroups":["${SECURITY_GROUP}"],"assignPublicIp":"ENABLED"}}'

      - aws-ecs/deploy-service-update:
          cluster: "${ECS_CLUSTER_NAME}"
          service-name: "${ECS_BACKEND_SERVICE}"
          family: "${ECS_BACKEND_SERVICE}"
          force-new-deployment: true
          deployment-controller: "ECS"
          network-configuration: '{"awsvpcConfiguration":{"subnets":["${SUBNET_1}","${SUBNET_2}"],"securityGroups":["${SECURITY_GROUP}"],"assignPublicIp":"ENABLED"}}'

workflows:
  release-deploy:
    jobs:
      - build-and-push-images:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy-to-aws:
          requires:
            - build-and-push-images
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/

# To create a release and trigger deployment:
# git tag v1.0.0
# git push origin v1.0.0
